<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="trucksBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////////////////////v////gDwBwxE4
        iBgRGIgYABgAwgAAAOYUhKT+EISk/hCEpMAQhKSAEISknBCEpIAQhKSAEISkAQAAAf8AAAH/////////
        //////////////////////////////////8=
</value>
  </data>
</root>