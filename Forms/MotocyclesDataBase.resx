<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="motocyclesBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrdhQN7n4LWe6A
        C3btfgxX7YASDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOt2FA3ugAtc7n4Ld+x+C1/weA8RAAAAAAAAAAAAAAAA6YQNUeqD
        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
        NhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuzDM8rssyvK3L
        MVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////B//+DgP//AQB//gAAAH4ACAAAEAn4
        GBAB8DgAAcB4AIAA/AHAAfwD/Af+B/geB4HggAfxwwDj4cAwwAPAeAAH//4Bj///gZ////kf///wP///
        8H////H///////////////////////////8=
</value>
  </data>
</root>